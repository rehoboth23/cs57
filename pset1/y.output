Grammar

    0 $accept: entry $end

    1 entry: functions

    2 functions: functions function
    3          | function

    4 function: function_definition code_block

    5 function_definition: TYPE VAR '(' TYPE ')'
    6                    | TYPE VAR '(' TYPE VAR ')'
    7                    | TYPE VAR '(' ')'

    8 loop: WHILE '(' condition ')' code_block

    9 if_else: if_statment
   10        | if_statment else_statement

   11 if_statment: IF '(' condition ')' statement

   12 else_statement: ELSE statement

   13 code_block: block_start statements block_end

   14 block_start: '{'

   15 block_end: '}'

   16 statements: statements statement
   17           | statement

   18 statement: assignment
   19          | function_call ';'
   20          | if_else
   21          | loop
   22          | code_block
   23          | variable_declaration

   24 variable_declaration: TYPE VAR ';'

   25 assignment: VAR '=' arithmetic ';'
   26           | VAR '=' parameter ';'
   27           | VAR '=' function_call ';'

   28 function_call: VAR '(' parameter ')'

   29 arithmetic: parameter '+' parameter
   30           | parameter '-' parameter
   31           | parameter '*' parameter
   32           | parameter '/' parameter

   33 condition: parameter EQ parameter
   34          | parameter LT parameter
   35          | parameter LTE parameter
   36          | parameter GT parameter
   37          | parameter GTE parameter

   38 parameter: operand
   39          | unary

   40 operand: NUM
   41        | VAR

   42 unary: '-' operand


Terminals, with rules where they appear

$end (0) 0
'(' (40) 5 6 7 8 11 28
')' (41) 5 6 7 8 11 28
'*' (42) 31
'+' (43) 29
'-' (45) 30 42
'/' (47) 32
';' (59) 19 24 25 26 27
'=' (61) 25 26 27
'{' (123) 14
'}' (125) 15
error (256)
NUM (258) 40
VAR (259) 5 6 7 24 25 26 27 28 41
TYPE (260) 5 6 7 24
IF (261) 11
ELSE (262) 12
WHILE (263) 8
LT (264) 34
GT (265) 36
LTE (266) 35
GTE (267) 37
EQ (268) 33
UNARY (269)
IFX (270)


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
entry (27)
    on left: 1, on right: 0
functions (28)
    on left: 2 3, on right: 1 2
function (29)
    on left: 4, on right: 2 3
function_definition (30)
    on left: 5 6 7, on right: 4
loop (31)
    on left: 8, on right: 21
if_else (32)
    on left: 9 10, on right: 20
if_statment (33)
    on left: 11, on right: 9 10
else_statement (34)
    on left: 12, on right: 10
code_block (35)
    on left: 13, on right: 4 8 22
block_start (36)
    on left: 14, on right: 13
block_end (37)
    on left: 15, on right: 13
statements (38)
    on left: 16 17, on right: 13 16
statement (39)
    on left: 18 19 20 21 22 23, on right: 11 12 16 17
variable_declaration (40)
    on left: 24, on right: 23
assignment (41)
    on left: 25 26 27, on right: 18
function_call (42)
    on left: 28, on right: 19 27
arithmetic (43)
    on left: 29 30 31 32, on right: 25
condition (44)
    on left: 33 34 35 36 37, on right: 8 11
parameter (45)
    on left: 38 39, on right: 26 28 29 30 31 32 33 34 35 36 37
operand (46)
    on left: 40 41, on right: 38 42
unary (47)
    on left: 42, on right: 39


state 0

    0 $accept: . entry $end

    TYPE  shift, and go to state 1

    entry                go to state 2
    functions            go to state 3
    function             go to state 4
    function_definition  go to state 5


state 1

    5 function_definition: TYPE . VAR '(' TYPE ')'
    6                    | TYPE . VAR '(' TYPE VAR ')'
    7                    | TYPE . VAR '(' ')'

    VAR  shift, and go to state 6


state 2

    0 $accept: entry . $end

    $end  shift, and go to state 7


state 3

    1 entry: functions .
    2 functions: functions . function

    TYPE  shift, and go to state 1

    $default  reduce using rule 1 (entry)

    function             go to state 8
    function_definition  go to state 5


state 4

    3 functions: function .

    $default  reduce using rule 3 (functions)


state 5

    4 function: function_definition . code_block

    '{'  shift, and go to state 9

    code_block   go to state 10
    block_start  go to state 11


state 6

    5 function_definition: TYPE VAR . '(' TYPE ')'
    6                    | TYPE VAR . '(' TYPE VAR ')'
    7                    | TYPE VAR . '(' ')'

    '('  shift, and go to state 12


state 7

    0 $accept: entry $end .

    $default  accept


state 8

    2 functions: functions function .

    $default  reduce using rule 2 (functions)


state 9

   14 block_start: '{' .

    $default  reduce using rule 14 (block_start)


state 10

    4 function: function_definition code_block .

    $default  reduce using rule 4 (function)


state 11

   13 code_block: block_start . statements block_end

    VAR    shift, and go to state 13
    TYPE   shift, and go to state 14
    IF     shift, and go to state 15
    WHILE  shift, and go to state 16
    '{'    shift, and go to state 9

    loop                  go to state 17
    if_else               go to state 18
    if_statment           go to state 19
    code_block            go to state 20
    block_start           go to state 11
    statements            go to state 21
    statement             go to state 22
    variable_declaration  go to state 23
    assignment            go to state 24
    function_call         go to state 25


state 12

    5 function_definition: TYPE VAR '(' . TYPE ')'
    6                    | TYPE VAR '(' . TYPE VAR ')'
    7                    | TYPE VAR '(' . ')'

    TYPE  shift, and go to state 26
    ')'   shift, and go to state 27


state 13

   25 assignment: VAR . '=' arithmetic ';'
   26           | VAR . '=' parameter ';'
   27           | VAR . '=' function_call ';'
   28 function_call: VAR . '(' parameter ')'

    '('  shift, and go to state 28
    '='  shift, and go to state 29


state 14

   24 variable_declaration: TYPE . VAR ';'

    VAR  shift, and go to state 30


state 15

   11 if_statment: IF . '(' condition ')' statement

    '('  shift, and go to state 31


state 16

    8 loop: WHILE . '(' condition ')' code_block

    '('  shift, and go to state 32


state 17

   21 statement: loop .

    $default  reduce using rule 21 (statement)


state 18

   20 statement: if_else .

    $default  reduce using rule 20 (statement)


state 19

    9 if_else: if_statment .
   10        | if_statment . else_statement

    ELSE  shift, and go to state 33

    $default  reduce using rule 9 (if_else)

    else_statement  go to state 34


state 20

   22 statement: code_block .

    $default  reduce using rule 22 (statement)


state 21

   13 code_block: block_start statements . block_end
   16 statements: statements . statement

    VAR    shift, and go to state 13
    TYPE   shift, and go to state 14
    IF     shift, and go to state 15
    WHILE  shift, and go to state 16
    '{'    shift, and go to state 9
    '}'    shift, and go to state 35

    loop                  go to state 17
    if_else               go to state 18
    if_statment           go to state 19
    code_block            go to state 20
    block_start           go to state 11
    block_end             go to state 36
    statement             go to state 37
    variable_declaration  go to state 23
    assignment            go to state 24
    function_call         go to state 25


state 22

   17 statements: statement .

    $default  reduce using rule 17 (statements)


state 23

   23 statement: variable_declaration .

    $default  reduce using rule 23 (statement)


state 24

   18 statement: assignment .

    $default  reduce using rule 18 (statement)


state 25

   19 statement: function_call . ';'

    ';'  shift, and go to state 38


state 26

    5 function_definition: TYPE VAR '(' TYPE . ')'
    6                    | TYPE VAR '(' TYPE . VAR ')'

    VAR  shift, and go to state 39
    ')'  shift, and go to state 40


state 27

    7 function_definition: TYPE VAR '(' ')' .

    $default  reduce using rule 7 (function_definition)


state 28

   28 function_call: VAR '(' . parameter ')'

    NUM  shift, and go to state 41
    VAR  shift, and go to state 42
    '-'  shift, and go to state 43

    parameter  go to state 44
    operand    go to state 45
    unary      go to state 46


state 29

   25 assignment: VAR '=' . arithmetic ';'
   26           | VAR '=' . parameter ';'
   27           | VAR '=' . function_call ';'

    NUM  shift, and go to state 41
    VAR  shift, and go to state 47
    '-'  shift, and go to state 43

    function_call  go to state 48
    arithmetic     go to state 49
    parameter      go to state 50
    operand        go to state 45
    unary          go to state 46


state 30

   24 variable_declaration: TYPE VAR . ';'

    ';'  shift, and go to state 51


state 31

   11 if_statment: IF '(' . condition ')' statement

    NUM  shift, and go to state 41
    VAR  shift, and go to state 42
    '-'  shift, and go to state 43

    condition  go to state 52
    parameter  go to state 53
    operand    go to state 45
    unary      go to state 46


state 32

    8 loop: WHILE '(' . condition ')' code_block

    NUM  shift, and go to state 41
    VAR  shift, and go to state 42
    '-'  shift, and go to state 43

    condition  go to state 54
    parameter  go to state 53
    operand    go to state 45
    unary      go to state 46


state 33

   12 else_statement: ELSE . statement

    VAR    shift, and go to state 13
    TYPE   shift, and go to state 14
    IF     shift, and go to state 15
    WHILE  shift, and go to state 16
    '{'    shift, and go to state 9

    loop                  go to state 17
    if_else               go to state 18
    if_statment           go to state 19
    code_block            go to state 20
    block_start           go to state 11
    statement             go to state 55
    variable_declaration  go to state 23
    assignment            go to state 24
    function_call         go to state 25


state 34

   10 if_else: if_statment else_statement .

    $default  reduce using rule 10 (if_else)


state 35

   15 block_end: '}' .

    $default  reduce using rule 15 (block_end)


state 36

   13 code_block: block_start statements block_end .

    $default  reduce using rule 13 (code_block)


state 37

   16 statements: statements statement .

    $default  reduce using rule 16 (statements)


state 38

   19 statement: function_call ';' .

    $default  reduce using rule 19 (statement)


state 39

    6 function_definition: TYPE VAR '(' TYPE VAR . ')'

    ')'  shift, and go to state 56


state 40

    5 function_definition: TYPE VAR '(' TYPE ')' .

    $default  reduce using rule 5 (function_definition)


state 41

   40 operand: NUM .

    $default  reduce using rule 40 (operand)


state 42

   41 operand: VAR .

    $default  reduce using rule 41 (operand)


state 43

   42 unary: '-' . operand

    NUM  shift, and go to state 41
    VAR  shift, and go to state 42

    operand  go to state 57


state 44

   28 function_call: VAR '(' parameter . ')'

    ')'  shift, and go to state 58


state 45

   38 parameter: operand .

    $default  reduce using rule 38 (parameter)


state 46

   39 parameter: unary .

    $default  reduce using rule 39 (parameter)


state 47

   28 function_call: VAR . '(' parameter ')'
   41 operand: VAR .

    '('  shift, and go to state 28

    $default  reduce using rule 41 (operand)


state 48

   27 assignment: VAR '=' function_call . ';'

    ';'  shift, and go to state 59


state 49

   25 assignment: VAR '=' arithmetic . ';'

    ';'  shift, and go to state 60


state 50

   26 assignment: VAR '=' parameter . ';'
   29 arithmetic: parameter . '+' parameter
   30           | parameter . '-' parameter
   31           | parameter . '*' parameter
   32           | parameter . '/' parameter

    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64
    ';'  shift, and go to state 65


state 51

   24 variable_declaration: TYPE VAR ';' .

    $default  reduce using rule 24 (variable_declaration)


state 52

   11 if_statment: IF '(' condition . ')' statement

    ')'  shift, and go to state 66


state 53

   33 condition: parameter . EQ parameter
   34          | parameter . LT parameter
   35          | parameter . LTE parameter
   36          | parameter . GT parameter
   37          | parameter . GTE parameter

    LT   shift, and go to state 67
    GT   shift, and go to state 68
    LTE  shift, and go to state 69
    GTE  shift, and go to state 70
    EQ   shift, and go to state 71


state 54

    8 loop: WHILE '(' condition . ')' code_block

    ')'  shift, and go to state 72


state 55

   12 else_statement: ELSE statement .

    $default  reduce using rule 12 (else_statement)


state 56

    6 function_definition: TYPE VAR '(' TYPE VAR ')' .

    $default  reduce using rule 6 (function_definition)


state 57

   42 unary: '-' operand .

    $default  reduce using rule 42 (unary)


state 58

   28 function_call: VAR '(' parameter ')' .

    $default  reduce using rule 28 (function_call)


state 59

   27 assignment: VAR '=' function_call ';' .

    $default  reduce using rule 27 (assignment)


state 60

   25 assignment: VAR '=' arithmetic ';' .

    $default  reduce using rule 25 (assignment)


state 61

   29 arithmetic: parameter '+' . parameter

    NUM  shift, and go to state 41
    VAR  shift, and go to state 42
    '-'  shift, and go to state 43

    parameter  go to state 73
    operand    go to state 45
    unary      go to state 46


state 62

   30 arithmetic: parameter '-' . parameter

    NUM  shift, and go to state 41
    VAR  shift, and go to state 42
    '-'  shift, and go to state 43

    parameter  go to state 74
    operand    go to state 45
    unary      go to state 46


state 63

   31 arithmetic: parameter '*' . parameter

    NUM  shift, and go to state 41
    VAR  shift, and go to state 42
    '-'  shift, and go to state 43

    parameter  go to state 75
    operand    go to state 45
    unary      go to state 46


state 64

   32 arithmetic: parameter '/' . parameter

    NUM  shift, and go to state 41
    VAR  shift, and go to state 42
    '-'  shift, and go to state 43

    parameter  go to state 76
    operand    go to state 45
    unary      go to state 46


state 65

   26 assignment: VAR '=' parameter ';' .

    $default  reduce using rule 26 (assignment)


state 66

   11 if_statment: IF '(' condition ')' . statement

    VAR    shift, and go to state 13
    TYPE   shift, and go to state 14
    IF     shift, and go to state 15
    WHILE  shift, and go to state 16
    '{'    shift, and go to state 9

    loop                  go to state 17
    if_else               go to state 18
    if_statment           go to state 19
    code_block            go to state 20
    block_start           go to state 11
    statement             go to state 77
    variable_declaration  go to state 23
    assignment            go to state 24
    function_call         go to state 25


state 67

   34 condition: parameter LT . parameter

    NUM  shift, and go to state 41
    VAR  shift, and go to state 42
    '-'  shift, and go to state 43

    parameter  go to state 78
    operand    go to state 45
    unary      go to state 46


state 68

   36 condition: parameter GT . parameter

    NUM  shift, and go to state 41
    VAR  shift, and go to state 42
    '-'  shift, and go to state 43

    parameter  go to state 79
    operand    go to state 45
    unary      go to state 46


state 69

   35 condition: parameter LTE . parameter

    NUM  shift, and go to state 41
    VAR  shift, and go to state 42
    '-'  shift, and go to state 43

    parameter  go to state 80
    operand    go to state 45
    unary      go to state 46


state 70

   37 condition: parameter GTE . parameter

    NUM  shift, and go to state 41
    VAR  shift, and go to state 42
    '-'  shift, and go to state 43

    parameter  go to state 81
    operand    go to state 45
    unary      go to state 46


state 71

   33 condition: parameter EQ . parameter

    NUM  shift, and go to state 41
    VAR  shift, and go to state 42
    '-'  shift, and go to state 43

    parameter  go to state 82
    operand    go to state 45
    unary      go to state 46


state 72

    8 loop: WHILE '(' condition ')' . code_block

    '{'  shift, and go to state 9

    code_block   go to state 83
    block_start  go to state 11


state 73

   29 arithmetic: parameter '+' parameter .

    $default  reduce using rule 29 (arithmetic)


state 74

   30 arithmetic: parameter '-' parameter .

    $default  reduce using rule 30 (arithmetic)


state 75

   31 arithmetic: parameter '*' parameter .

    $default  reduce using rule 31 (arithmetic)


state 76

   32 arithmetic: parameter '/' parameter .

    $default  reduce using rule 32 (arithmetic)


state 77

   11 if_statment: IF '(' condition ')' statement .

    $default  reduce using rule 11 (if_statment)


state 78

   34 condition: parameter LT parameter .

    $default  reduce using rule 34 (condition)


state 79

   36 condition: parameter GT parameter .

    $default  reduce using rule 36 (condition)


state 80

   35 condition: parameter LTE parameter .

    $default  reduce using rule 35 (condition)


state 81

   37 condition: parameter GTE parameter .

    $default  reduce using rule 37 (condition)


state 82

   33 condition: parameter EQ parameter .

    $default  reduce using rule 33 (condition)


state 83

    8 loop: WHILE '(' condition ')' code_block .

    $default  reduce using rule 8 (loop)
